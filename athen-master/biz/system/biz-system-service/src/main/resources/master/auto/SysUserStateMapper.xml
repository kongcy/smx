<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xtxk.system.repository.SysUserStateMapper">
  <resultMap id="BaseResultMap" type="com.xtxk.system.api.model.SysUserState">
    <id column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="TOKEN" jdbcType="VARCHAR" property="token" />
    <result column="TERMINAL_TYPE" jdbcType="VARCHAR" property="terminalType" />
    <result column="USER_STATE" jdbcType="INTEGER" property="userState" />
    <result column="VALID_TIME" jdbcType="TIMESTAMP" property="validTime" />
    <result column="LOGIN_IP" jdbcType="VARCHAR" property="loginIp" />
    <result column="NODE_ID" jdbcType="VARCHAR" property="nodeId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
    <result column="UPDATE_USER" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USER_ID, TOKEN, TERMINAL_TYPE, USER_STATE, VALID_TIME, LOGIN_IP, NODE_ID, CREATE_TIME, 
    UPDATE_TIME, CREATE_USER, UPDATE_USER
  </sql>
  <select id="selectByExample" parameterType="com.xtxk.system.api.model.SysUserStateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from SYS_USER_STATE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from SYS_USER_STATE
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from SYS_USER_STATE
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xtxk.system.api.model.SysUserStateExample">
    delete from SYS_USER_STATE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xtxk.system.api.model.SysUserState">
    insert into SYS_USER_STATE (USER_ID, TOKEN, TERMINAL_TYPE, 
      USER_STATE, VALID_TIME, LOGIN_IP, 
      NODE_ID, CREATE_TIME, UPDATE_TIME, 
      CREATE_USER, UPDATE_USER)
    values (#{userId,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{terminalType,jdbcType=VARCHAR}, 
      #{userState,jdbcType=INTEGER}, #{validTime,jdbcType=TIMESTAMP}, #{loginIp,jdbcType=VARCHAR}, 
      #{nodeId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xtxk.system.api.model.SysUserState">
    insert into SYS_USER_STATE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="token != null">
        TOKEN,
      </if>
      <if test="terminalType != null">
        TERMINAL_TYPE,
      </if>
      <if test="userState != null">
        USER_STATE,
      </if>
      <if test="validTime != null">
        VALID_TIME,
      </if>
      <if test="loginIp != null">
        LOGIN_IP,
      </if>
      <if test="nodeId != null">
        NODE_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="createUser != null">
        CREATE_USER,
      </if>
      <if test="updateUser != null">
        UPDATE_USER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="terminalType != null">
        #{terminalType,jdbcType=VARCHAR},
      </if>
      <if test="userState != null">
        #{userState,jdbcType=INTEGER},
      </if>
      <if test="validTime != null">
        #{validTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="nodeId != null">
        #{nodeId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xtxk.system.api.model.SysUserStateExample" resultType="java.lang.Long">
    select count(*) from SYS_USER_STATE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update SYS_USER_STATE
    <set>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null">
        TOKEN = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.terminalType != null">
        TERMINAL_TYPE = #{record.terminalType,jdbcType=VARCHAR},
      </if>
      <if test="record.userState != null">
        USER_STATE = #{record.userState,jdbcType=INTEGER},
      </if>
      <if test="record.validTime != null">
        VALID_TIME = #{record.validTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginIp != null">
        LOGIN_IP = #{record.loginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeId != null">
        NODE_ID = #{record.nodeId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null">
        UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update SYS_USER_STATE
    set USER_ID = #{record.userId,jdbcType=VARCHAR},
      TOKEN = #{record.token,jdbcType=VARCHAR},
      TERMINAL_TYPE = #{record.terminalType,jdbcType=VARCHAR},
      USER_STATE = #{record.userState,jdbcType=INTEGER},
      VALID_TIME = #{record.validTime,jdbcType=TIMESTAMP},
      LOGIN_IP = #{record.loginIp,jdbcType=VARCHAR},
      NODE_ID = #{record.nodeId,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xtxk.system.api.model.SysUserState">
    update SYS_USER_STATE
    <set>
      <if test="token != null">
        TOKEN = #{token,jdbcType=VARCHAR},
      </if>
      <if test="terminalType != null">
        TERMINAL_TYPE = #{terminalType,jdbcType=VARCHAR},
      </if>
      <if test="userState != null">
        USER_STATE = #{userState,jdbcType=INTEGER},
      </if>
      <if test="validTime != null">
        VALID_TIME = #{validTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null">
        LOGIN_IP = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="nodeId != null">
        NODE_ID = #{nodeId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xtxk.system.api.model.SysUserState">
    update SYS_USER_STATE
    set TOKEN = #{token,jdbcType=VARCHAR},
      TERMINAL_TYPE = #{terminalType,jdbcType=VARCHAR},
      USER_STATE = #{userState,jdbcType=INTEGER},
      VALID_TIME = #{validTime,jdbcType=TIMESTAMP},
      LOGIN_IP = #{loginIp,jdbcType=VARCHAR},
      NODE_ID = #{nodeId,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      UPDATE_USER = #{updateUser,jdbcType=VARCHAR}
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>