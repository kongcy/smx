<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xtxk.system.repository.SysUserFaceInfoMapper">
  <resultMap id="BaseResultMap" type="com.xtxk.system.api.model.SysUserFaceInfo">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="LOGIN_NAME" jdbcType="VARCHAR" property="loginName" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="PATH" jdbcType="VARCHAR" property="path" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xtxk.system.api.model.SysUserFaceInfoWithBLOBs">
    <result column="FACE_FEATURE" jdbcType="LONGVARBINARY" property="faceFeature" />
    <result column="PHONE_BASE64" jdbcType="LONGVARCHAR" property="phoneBase64" />
  </resultMap>

  <resultMap id="BaseResultMap_as" type="com.xtxk.system.api.DTO.SysUserFaceDTO">
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="LOGIN_NAME" jdbcType="VARCHAR" property="loginName" />
    <result column="FACE_FEATURE" jdbcType="LONGVARBINARY" property="faceFeature" />
    <result column="PHONE_BASE64" jdbcType="LONGVARCHAR" property="phoneBase64" />
  </resultMap>

  <resultMap id="BaseResultMap_image_as" type="com.xtxk.system.api.DTO.SysUserFaceImageDTO">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="FACE_FEATURE" jdbcType="LONGVARBINARY" property="faceFeature" />
    <result column="LOGIN_NAME" jdbcType="VARCHAR" property="loginName" />
    <result column="PHONE_BASE64" jdbcType="LONGVARCHAR" property="phoneBase64" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, USER_ID, LOGIN_NAME, CREATE_TIME, UPDATE_TIME, PATH, USER_NAME
  </sql>
  <sql id="Blob_Column_List">
    FACE_FEATURE, PHONE_BASE64
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xtxk.system.api.model.SysUserFaceInfoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from SYS_USER_FACE_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xtxk.system.api.model.SysUserFaceInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from SYS_USER_FACE_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from SYS_USER_FACE_INFO
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from SYS_USER_FACE_INFO
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xtxk.system.api.model.SysUserFaceInfoExample">
    delete from SYS_USER_FACE_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xtxk.system.api.model.SysUserFaceInfoWithBLOBs">
    insert into SYS_USER_FACE_INFO (ID, USER_ID, LOGIN_NAME, 
      CREATE_TIME, UPDATE_TIME, PATH, 
      USER_NAME, FACE_FEATURE, PHONE_BASE64
      )
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{path,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{faceFeature,jdbcType=LONGVARBINARY}, #{phoneBase64,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xtxk.system.api.model.SysUserFaceInfoWithBLOBs">
    insert into SYS_USER_FACE_INFO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="loginName != null">
        LOGIN_NAME,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="path != null">
        PATH,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="faceFeature != null">
        FACE_FEATURE,
      </if>
      <if test="phoneBase64 != null">
        PHONE_BASE64,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="faceFeature != null">
        #{faceFeature,jdbcType=LONGVARBINARY},
      </if>
      <if test="phoneBase64 != null">
        #{phoneBase64,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xtxk.system.api.model.SysUserFaceInfoExample" resultType="java.lang.Long">
    select count(*) from SYS_USER_FACE_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update SYS_USER_FACE_INFO
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.loginName != null">
        LOGIN_NAME = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.path != null">
        PATH = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.faceFeature != null">
        FACE_FEATURE = #{record.faceFeature,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.phoneBase64 != null">
        PHONE_BASE64 = #{record.phoneBase64,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update SYS_USER_FACE_INFO
    set ID = #{record.id,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      LOGIN_NAME = #{record.loginName,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      PATH = #{record.path,jdbcType=VARCHAR},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      FACE_FEATURE = #{record.faceFeature,jdbcType=LONGVARBINARY},
      PHONE_BASE64 = #{record.phoneBase64,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update SYS_USER_FACE_INFO
    set ID = #{record.id,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      LOGIN_NAME = #{record.loginName,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      PATH = #{record.path,jdbcType=VARCHAR},
      USER_NAME = #{record.userName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xtxk.system.api.model.SysUserFaceInfoWithBLOBs">
    update SYS_USER_FACE_INFO
    <set>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="path != null">
        PATH = #{path,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="faceFeature != null">
        FACE_FEATURE = #{faceFeature,jdbcType=LONGVARBINARY},
      </if>
      <if test="phoneBase64 != null">
        PHONE_BASE64 = #{phoneBase64,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xtxk.system.api.model.SysUserFaceInfoWithBLOBs">
    update SYS_USER_FACE_INFO
    set USER_ID = #{userId,jdbcType=VARCHAR},
      LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      PATH = #{path,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      FACE_FEATURE = #{faceFeature,jdbcType=LONGVARBINARY},
      PHONE_BASE64 = #{phoneBase64,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xtxk.system.api.model.SysUserFaceInfo">
    update SYS_USER_FACE_INFO
    set USER_ID = #{userId,jdbcType=VARCHAR},
      LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      PATH = #{path,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>